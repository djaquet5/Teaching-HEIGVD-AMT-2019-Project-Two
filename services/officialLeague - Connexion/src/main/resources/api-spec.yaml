swagger: '2.0'
info:
  version: '0.1.0'
  title: OfficialLeague USER API
  description: An API to manage an american football league
host: localhost:8080
basePath: /api
schemes:
  - http
parameters:
  token:
    in: header
    name: Authorization
    type: string
    required: true

paths:
  /connection:
    post:
      description: user connection
      operationId: login
      produces:
        - application/json
      consumes:
        - application/json
      parameters:
        - name: credentials
          in: body
          required: true
          schema:
            $ref: '#/definitions/Credentials'
      responses:
        '200':
          description: successfuly loged in
          schema:
            type: object
            $ref: '#/definitions/Token'
        '401':
          description: unvalid credentials
        '500':
          description: token generation failure

  /fruits:
    post:
      description: create a fruit
      operationId: createFruit
      consumes:
        - application/json
      parameters:
        - name: fruit
          in: body
          required: true
          schema:
            $ref: '#/definitions/Fruit'
      responses:
        '201':
          description: created
          schema:
            type: object
    get:
      description: get the list of all fruits
      operationId: getFruits
      produces:
        - application/json
      responses:
        '200':
          description: success
          schema:
            type: array
            items:
              $ref: '#/definitions/Fruit'
  /users:
    parameters:
      - $ref: '#/parameters/token'
    get:
      description: get the list of all users
      operationId: getUsers
      produces:
        - application/json
      responses:
        '200':
          description: success
          schema:
            type: array
            items:
              $ref: '#/definitions/User'
        '403':
          description: forbidden
    post:
      description: create a user
      operationId: createUsers
      consumes:
        - application/json
      parameters:
        - name: user
          in: body
          required: true
          schema:
            $ref: '#/definitions/User'
      responses:
        '201':
          description: created
          schema:
            type: object
        '403':
          description: forbidded

  /users/{userid}:
    parameters:
      - name: userId
        in: path
        required: true
        type: integer
      - $ref: '#/parameters/token'

    get:
      description: get a user by id
      operationId: getUserById
      produces:
        - application/json
      responses:
        '200':
          description: product retrieved successfully
          schema:
            $ref: '#/definitions/User'
        '403':
          description: forbidden
        '404':
          description: team not found

    delete:
      description: delete a user by id
      operationId: deleteUserById
      responses:
        '204':
          description: team deleted successfully
        '403':
          description: forbidden
        '404':
          description: team not found
definitions:
  Fruit:
    type: object
    properties:
      kind:
        type: string
      colour:
        type: string
      size:
        type: string
      weight:
        type: string

  User:
    type: object
    required:
      - id
      - firstname
      - lastname
      - email
      - password
    properties:
      id:
        type: integer
        format: int64
      firstname:
        type: string
        example: John
      lastname:
        type: string
        example: Doe
      email:
        type: string
        format: email
        example: john@doe.com
      password:
        type: string
        format: password