swagger: '2.0'
info:
  version: '0.1.0'
  title: OfficialLeague API
  description: An API to manage an american football league
host: localhost:8080
basePath: /api
schemes:
  - http
securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header

paths:
  /teams:
    get:
      description: Get the list of all teams
      operationId: getTeams
      produces:
        - application/json
      responses:
        '200':
          description: success
          schema:
            type: array
            items:
              $ref: '#/definitions/Team'
        '403':
          description: forbidden
    post:
      description: Create a team
      operationId: createTeam
      consumes:
        - application/json
      parameters:
        - name: team
          in: body
          required: true
          schema:
            $ref: '#/definitions/TeamDTO'
      responses:
        '201':
          description: created
        '403':
          description: forbidded

  /teams/{teamId}:
    parameters:
      - name: teamId
        in: path
        required: true
        type: integer
    get:
      description: Get a team by id
      operationId: getTeamById
      produces:
        - application/json
      responses:
        '200':
          description: Team retrieved successfully
          schema:
            $ref: '#/definitions/Team'
        '403':
          description: Forbidden
        '404':
          description: team not found

    put:
      description: Update a team by id
      operationId: updateTeamById
      consumes:
        - application/json
      parameters:
        - name: team
          in: body
          required: true
          schema:
              $ref: '#/definitions/TeamDTO'
      responses:
        '204':
          description: Team updated successfully
        '403':
          description: Forbidden
        '404':
          description: Team not found

    delete:
      description: Delete a team by id
      operationId: deleteTeamById
      responses:
        '204':
          description: team deleted successfully
        '403':
          description: forbidden
        '404':
          description: team not found

  /games:
    get:
      description: Get the list of all games
      operationId: getGames
      produces:
        - application/json
      parameters:
        - name: page
          in: query
          required: false
          type: integer
          default: 0
          minimum: 0
          description: The index of the page to display (starting at 0)
        - name: limit
          in: query
          required: false
          type: integer
          default: 10
          minimum: 0
          description: The number of element to display
      responses:
        '200':
          description: success
          schema:
            type: array
            items:
              $ref: '#/definitions/Game'
        '403':
          description: forbidden
    post:
      description: Create a game
      operationId: createGame
      consumes:
        - application/json
      parameters:
        - name: game
          in: body
          required: true
          schema:
            $ref: '#/definitions/GameDTO'
      responses:
        '201':
          description: created
        '400':
          description: syntax error
        '403':
          description: forbidded

  /games/{gameId}:
    parameters:
      - name: gameId
        in: path
        required: true
        type: integer

    get:
      description: Get a game by id
      operationId: getGameById
      produces:
        - application/json
      responses:
        '200':
          description: game retrieved successfully
          schema:
            $ref: '#/definitions/Game'
        '403':
          description: forbidden
        '404':
          description: game not found

    put:
      description: Update a game by id
      operationId: updateGameById
      consumes:
        - application/json
      parameters:
        - name: game
          in: body
          required: true
          schema:
            $ref: '#/definitions/GameDTO'
      responses:
        '204':
          description: Game updated successfully
        '403':
          description: Forbidden
        '404':
          description: Game not found

    delete:
      description: Delete a game by id
      operationId: deleteGameById
      responses:
        '204':
          description: game deleted successfully
        '403':
          description: forbidden
        '404':
          description: game not found

  /officials:
    get:
      description: Get a list of all officials
      operationId: getOfficials
      produces:
        - application/json
      responses:
        '200':
          description: success
          schema:
            type: array
            items:
              $ref: '#/definitions/Official'
        '403':
          description: forbidden

    post:
      description: Create an official
      operationId: createOfficial
      consumes:
        - application/json
      parameters:
        - name: official
          in: body
          required: true
          schema:
            $ref: '#/definitions/OfficialDTO'
      responses:
        '201':
          description: created
        '400':
          description: syntax error
        '403':
          description: forbidden

  /officials/{officialId}:
    parameters:
      - name: officialId
        in: path
        required: true
        type: integer

    get:
      description: Get an official by id
      operationId: getOfficialById
      produces:
        - application/json
      responses:
        '200':
          description: official retrieved successfully
          schema:
            $ref: '#/definitions/Official'
        '403':
          description: forbidden
        '404':
          description: official not found

    put:
      description: Update a official by id
      operationId: updateOfficialById
      consumes:
        - application/json
      parameters:
        - name: official
          in: body
          required: true
          schema:
            $ref: '#/definitions/OfficialDTO'
      responses:
        '204':
          description: Official updated successfully
        '403':
          description: Forbidden
        '404':
          description: Official not found

    delete:
      description: Delete an official by id
      operationId: deleteOfficialById
      responses:
        '204':
          description: official deleted successfully
        '403':
          description: forbidden
        '404':
          description: official not found

definitions:
  Team:
    type: object
    properties:
      id:
        type: integer
      name:
        type: string
      address:
        type: string
      zip:
        type: string
      city:
        type: string

  TeamDTO:
    type: object
    properties:
      name:
        type: string
      address:
        type: string
      zip:
        type: string
      city:
        type: string

  Official:
    type: object
    properties:
      id:
        type: integer
      level:
        type: integer
      team:
        $ref: '#/definitions/Team'

  OfficialDTO:
    type: object
    properties:
      level:
        type: integer
      idTeam:
        type: integer

  Game:
    type: object
    properties:
      id:
        type: integer
      timestamp:
        type: string
      teamAway:
        $ref: '#/definitions/Team'
      teamHome:
        $ref: '#/definitions/Team'
      referee:
        $ref: '#/definitions/Official'
      umpire:
        $ref: '#/definitions/Official'
      chainJudge:
        $ref: '#/definitions/Official'
      lineJudge:
        $ref: '#/definitions/Official'
      backJudge:
        $ref: '#/definitions/Official'
      sideJudge:
        $ref: '#/definitions/Official'
      fieldJudge:
        $ref: '#/definitions/Official'

  GameDTO:
    type: object
    properties:
      timestamp:
        type: string
      idTeamAway:
        type: integer
      idTeamHome:
        type: integer
      idReferee:
        type: integer
      idUmpire:
        type: integer
      idChainJudge:
        type: integer
      idLineJudge:
        type: integer
      idBackJudge:
        type: integer
      idSideJudge:
        type: integer
      idFieldJudge:
        type: integer